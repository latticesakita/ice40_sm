// >>>>>>>>>>>>>>>>>>>>>>> COPYRIGHT NOTICE <<<<<<<<<<<<<<<<<<<<<<<<<
// ------------------------------------------------------------------
// Copyright (c) 2019-2025 by Lattice Semiconductor Corporation
// ALL RIGHTS RESERVED
// ------------------------------------------------------------------
//
// IMPORTANT: THIS FILE IS USED BY OR GENERATED BY the LATTICE PROPELâ„¢
// DEVELOPMENT SUITE, WHICH INCLUDES PROPEL BUILDER AND PROPEL SDK.
//
// Lattice grants permission to use this code pursuant to the
// terms of the Lattice Propel License Agreement.
//
// DISCLAIMER:
//
//  LATTICE MAKES NO WARRANTIES ON THIS FILE OR ITS CONTENTS, WHETHER
//  EXPRESSED, IMPLIED, STATUTORY, OR IN ANY PROVISION OF THE LATTICE
//  PROPEL LICENSE AGREEMENT OR COMMUNICATION WITH LICENSEE, AND LATTICE
//  SPECIFICALLY DISCLAIMS ANY IMPLIED WARRANTY OF MERCHANTABILITY OR
//  FITNESS FOR A PARTICULAR PURPOSE.  LATTICE DOES NOT WARRANT THAT THE
//  FUNCTIONS CONTAINED HEREIN WILL MEET LICENSEE'S REQUIREMENTS, OR THAT
//  LICENSEE'S OPERATION OF ANY DEVICE, SOFTWARE OR SYSTEM USING THIS FILE
//  OR ITS CONTENTS WILL BE UNINTERRUPTED OR ERROR FREE, OR THAT DEFECTS
//  HEREIN WILL BE CORRECTED.  LICENSEE ASSUMES RESPONSIBILITY FOR
//  SELECTION OF MATERIALS TO ACHIEVE ITS INTENDED RESULTS, AND FOR THE
//  PROPER INSTALLATION, USE, AND RESULTS OBTAINED THEREFROM.  LICENSEE
//  ASSUMES THE ENTIRE RISK OF THE FILE AND ITS CONTENTS PROVING DEFECTIVE
//  OR FAILING TO PERFORM PROPERLY AND IN SUCH EVENT, LICENSEE SHALL
//  ASSUME THE ENTIRE COST AND RISK OF ANY REPAIR, SERVICE, CORRECTION, OR
//  ANY OTHER LIABILITIES OR DAMAGES CAUSED BY OR ASSOCIATED WITH THE
//  SOFTWARE.  IN NO EVENT SHALL LATTICE BE LIABLE TO ANY PARTY FOR DIRECT,
//  INDIRECT,SPECIAL, INCIDENTAL, OR CONSEQUENTIAL DAMAGES, INCLUDING LOST
//  PROFITS, ARISING OUT OF THE USE OF THIS FILE OR ITS CONTENTS, EVEN IF
//  LATTICE HAS BEEN ADVISED OF THE POSSIBILITY OF SUCH DAMAGES. LATTICE'S
//  SOLE LIABILITY, AND LICENSEE'S SOLE REMEDY, IS SET FORTH ABOVE.
//  LATTICE DOES NOT WARRANT OR REPRESENT THAT THIS FILE, ITS CONTENTS OR
//  USE THEREOF DOES NOT INFRINGE ON THIRD PARTIES' INTELLECTUAL PROPERTY
//  RIGHTS, INCLUDING ANY PATENT. IT IS THE USER'S RESPONSIBILITY TO VERIFY
//  THE USER SOFTWARE DESIGN FOR CONSISTENCY AND FUNCTIONALITY THROUGH THE
//  USE OF FORMAL SOFTWARE VALIDATION METHODS.
// ------------------------------------------------------------------

#ifndef _PLATFORM_INIT_H
#define _PLATFORM_INIT_H
#include "sys_platform.h"

#ifndef True
#define True 1
#endif
#ifndef False
#define False 0
#endif

#define _CONFIG_DEF(Head, Tail) Head##_##Tail
#define CONFIG_DEF(Head, Tail) _CONFIG_DEF(Head, Tail)

//RX core
#if (defined RISCV_RTOS_INST_0) && !(defined RISCV_RTOS_INST_0_NAME)
#define CPU_INST_0_NAME                    CONFIG_DEF(RISCV_RTOS_INST_0, NAME)
#define CPU_INST_0_LOCAL_UART_EN           CONFIG_DEF(RISCV_RTOS_INST_0, UART_EN)
#define CPU_INST_0_SYS_CLOCK_FREQ          CONFIG_DEF(RISCV_RTOS_INST_0, SYS_CLOCK_FREQ)
#define CPU_INST_0_PLIC_EN                 CONFIG_DEF(RISCV_RTOS_INST_0, PLIC_EN)
#define CPU_INST_0_CLINT_EN                CONFIG_DEF(RISCV_RTOS_INST_0, CLINT_EN)

#if CPU_INST_0_LOCAL_UART_EN
#define CPU_INST_0_UART_BASE_ADDR          CONFIG_DEF(RISCV_RTOS_INST_0, LOCAL_UART_BASE_ADDR)
#define CPU_INST_0_UART_BAUD_RATE          CONFIG_DEF(RISCV_RTOS_INST_0, BAUD_RATE)
#define CPU_INST_0_UART_SYS_CLK            CONFIG_DEF(RISCV_RTOS_INST_0, SYS_CLOCK_FREQ)
#endif

#if CPU_INST_0_PLIC_EN
#define CPU_INST_0_PLIC_BASE_ADDR          CONFIG_DEF(RISCV_RTOS_INST_0, PLIC_BASE_ADDR)
#endif

#if CPU_INST_0_CLINT_EN
#define CPU_INST_0_CLINT_BASE_ADDR         CONFIG_DEF(RISCV_RTOS_INST_0, CLINT_BASE_ADDR)
#endif
#endif

//MC core
#if (defined RISCV_MC_INST_0) && !(defined RISCV_MC_INST_0_NAME)
#define CPU_INST_0_NAME                    CONFIG_DEF(RISCV_MC_INST_0, NAME)
#define CPU_INST_0_PIC_ENABLE              CONFIG_DEF(RISCV_MC_INST_0, PIC_ENABLE)
#define CPU_INST_0_TIMER_ENABLE            CONFIG_DEF(RISCV_MC_INST_0, TIMER_ENABLE)

#if CPU_INST_0_PIC_ENABLE || CPU_INST_0_TIMER_ENABLE
#define CPU_INST_0_PICTIMER_START_ADDR     CONFIG_DEF(RISCV_MC_INST_0, PICTIMER_START_ADDR)
#endif
#endif

//SM core
#if (defined RISCV_SM_INST_0) && !(defined RISCV_SM_INST_0_NAME)
#define CPU_INST_0_NAME                    CONFIG_DEF(RISCV_SM_INST_0, NAME)
#define CPU_INST_0_PIC_ENABLE              CONFIG_DEF(RISCV_SM_INST_0, PIC_ENABLE)
#define CPU_INST_0_TIMER_ENABLE            CONFIG_DEF(RISCV_SM_INST_0, TIMER_ENABLE)

#if CPU_INST_0_PIC_ENABLE || CPU_INST_0_TIMER_ENABLE
#define CPU_INST_0_PICTIMER_START_ADDR     CONFIG_DEF(RISCV_SM_INST_0, PICTIMER_START_ADDR)
#endif
#endif

//NANO core
#if (defined RISCV_NANO_INST_0) && !(defined RISCV_NANO_INST_0_NAME)
#define CPU_INST_0_NAME                    CONFIG_DEF(RISCV_NANO_INST_0, NAME)
#define CPU_INST_0_PIC_ENABLE              CONFIG_DEF(RISCV_NANO_INST_0, PIC_ENABLE)

#define IS_NANO_CORE 1
#endif

//GPIO
#if (defined GPIO_INST_0) && !(defined GPIO_INST_0_NAME)
#define GPIO_INST_0_NAME                   CONFIG_DEF(GPIO_INST_0, NAME)
#define GPIO_INST_0_BASE_ADDR              CONFIG_DEF(GPIO_INST_0, BASE_ADDR)
#define GPIO_INST_0_GPIO_DIRS              CONFIG_DEF(GPIO_INST_0, GPIO_DIRS)
#define GPIO_INST_0_LINES_NUM              CONFIG_DEF(GPIO_INST_0, LINES_NUM)
#define GPIO_INST_0_IRQ                    CONFIG_DEF(GPIO_INST_0, IRQ)
#endif

//UART
#if (defined UART_INST_0) && !(defined UART_INST_0_NAME)
#define UART_INST_0_NAME                   CONFIG_DEF(UART_INST_0, NAME)
#define UART_INST_0_BASE_ADDR              CONFIG_DEF(UART_INST_0, BASE_ADDR)
#define UART_INST_0_BAUD_RATE              CONFIG_DEF(UART_INST_0, BAUD_RATE)
#define UART_INST_0_SYS_CLK                CONFIG_DEF(UART_INST_0, SYS_CLK)
#define UART_INST_0_IRQ                    CONFIG_DEF(UART_INST_0, IRQ)
#endif

//IIC
#if (defined I2C_CONTROLLER_INST_0) && !(defined I2C_CONTROLLER_INST_0_NAME)
#define I2C_CONTROLLER_INST_0_NAME               CONFIG_DEF(I2C_CONTROLLER_INST_0, NAME)
#define I2C_CONTROLLER_INST_0_BASE_ADDR          CONFIG_DEF(I2C_CONTROLLER_INST_0, BASE_ADDR)
#define I2C_CONTROLLER_INST_0_FIFO_DEPTH         CONFIG_DEF(I2C_CONTROLLER_INST_0, FIFO_DEPTH)
#define I2C_CONTROLLER_INST_0_PRESCALER          CONFIG_DEF(I2C_CONTROLLER_INST_0, PRESCALER)
#endif

#if (defined I2C_TARGET_INST_0) && !(defined I2C_TARGET_INST_0_NAME)
#define I2C_TARGET_INST_0_NAME                   CONFIG_DEF(I2C_TARGET_INST_0, NAME)
#define I2C_TARGET_INST_0_BASE_ADDR              CONFIG_DEF(I2C_TARGET_INST_0, BASE_ADDR)
#define I2C_TARGET_INST_0_ADDR_MODE              CONFIG_DEF(I2C_TARGET_INST_0, ADDR_MODE)
#define I2C_TARGET_INST_0_SLAVE_ADDR             CONFIG_DEF(I2C_TARGET_INST_0, SLAVE_ADDR)
#endif

//SPI
#if (defined OCTAL_SPI_CONTROLLER_INST_0) && !(defined OCTAL_SPI_CONTROLLER_INST_0_NAME)
#define OCTAL_SPI_CONTROLLER_INST_0_NAME             CONFIG_DEF(OCTAL_SPI_CONTROLLER_INST_0, NAME)
#define OCTAL_SPI_CONTROLLER_INST_0_BASE_ADDR        CONFIG_DEF(OCTAL_SPI_CONTROLLER_INST_0, BASE_ADDR)
#define OCTAL_SPI_CONTROLLER_INST_0_RXTX_FIFO_SIZE   CONFIG_DEF(OCTAL_SPI_CONTROLLER_INST_0, RXTX_FIFO_SIZE)
#endif

/*Project default config, should re-config if design changed*/
/*LED instance*/
#ifdef GPIO_INST_0_NAME
#define LED_GPIO_INST_NAME                 GPIO_INST_0_NAME
#define LED_GPIO_INST_BASE_ADDR            GPIO_INST_0_BASE_ADDR
#define LED_GPIO_INST_GPIO_DIRS            GPIO_INST_0_GPIO_DIRS
#define LED_GPIO_INST_LINES_NUM            GPIO_INST_0_LINES_NUM
#endif

/*Printf terminal instance*/
#ifdef UART_INST_0_NAME
#define TERM_UART_INST_NAME                UART_INST_0_NAME
#define TERM_UART_INST_BASE_ADDR           UART_INST_0_BASE_ADDR
#define TERM_UART_INST_BAUD_RATE           UART_INST_0_BAUD_RATE
#define TERM_UART_INST_SYS_CLK             UART_INST_0_SYS_CLK
#define TERM_UART_INST_IRQ                 UART_INST_0_IRQ
#endif

#ifdef CPU_INST_0_UART_BASE_ADDR
#define TERM_LOCAL_UART_INST_BASE_ADDR     CPU_INST_0_UART_BASE_ADDR
#define TERM_LOCAL_UART_INST_BAUD_RATE     CPU_INST_0_UART_BAUD_RATE
#define TERM_LOCAL_UART_INST_SYS_CLK       CPU_INST_0_UART_SYS_CLK
#endif

#endif
