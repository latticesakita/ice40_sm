// >>>>>>>>>>>>>>>>>>>>>>> COPYRIGHT NOTICE <<<<<<<<<<<<<<<<<<<<<<<<<
// ------------------------------------------------------------------
// Copyright (c) 2019-2025 by Lattice Semiconductor Corporation
// ALL RIGHTS RESERVED
// ------------------------------------------------------------------
//
// IMPORTANT: THIS FILE IS USED BY OR GENERATED BY the LATTICE PROPELâ„¢
// DEVELOPMENT SUITE, WHICH INCLUDES PROPEL BUILDER AND PROPEL SDK.
//
// Lattice grants permission to use this code pursuant to the
// terms of the Lattice Propel License Agreement.
//
// DISCLAIMER:
//
//  LATTICE MAKES NO WARRANTIES ON THIS FILE OR ITS CONTENTS, WHETHER
//  EXPRESSED, IMPLIED, STATUTORY, OR IN ANY PROVISION OF THE LATTICE
//  PROPEL LICENSE AGREEMENT OR COMMUNICATION WITH LICENSEE, AND LATTICE
//  SPECIFICALLY DISCLAIMS ANY IMPLIED WARRANTY OF MERCHANTABILITY OR
//  FITNESS FOR A PARTICULAR PURPOSE.  LATTICE DOES NOT WARRANT THAT THE
//  FUNCTIONS CONTAINED HEREIN WILL MEET LICENSEE'S REQUIREMENTS, OR THAT
//  LICENSEE'S OPERATION OF ANY DEVICE, SOFTWARE OR SYSTEM USING THIS FILE
//  OR ITS CONTENTS WILL BE UNINTERRUPTED OR ERROR FREE, OR THAT DEFECTS
//  HEREIN WILL BE CORRECTED.  LICENSEE ASSUMES RESPONSIBILITY FOR
//  SELECTION OF MATERIALS TO ACHIEVE ITS INTENDED RESULTS, AND FOR THE
//  PROPER INSTALLATION, USE, AND RESULTS OBTAINED THEREFROM.  LICENSEE
//  ASSUMES THE ENTIRE RISK OF THE FILE AND ITS CONTENTS PROVING DEFECTIVE
//  OR FAILING TO PERFORM PROPERLY AND IN SUCH EVENT, LICENSEE SHALL
//  ASSUME THE ENTIRE COST AND RISK OF ANY REPAIR, SERVICE, CORRECTION, OR
//  ANY OTHER LIABILITIES OR DAMAGES CAUSED BY OR ASSOCIATED WITH THE
//  SOFTWARE.  IN NO EVENT SHALL LATTICE BE LIABLE TO ANY PARTY FOR DIRECT,
//  INDIRECT,SPECIAL, INCIDENTAL, OR CONSEQUENTIAL DAMAGES, INCLUDING LOST
//  PROFITS, ARISING OUT OF THE USE OF THIS FILE OR ITS CONTENTS, EVEN IF
//  LATTICE HAS BEEN ADVISED OF THE POSSIBILITY OF SUCH DAMAGES. LATTICE'S
//  SOLE LIABILITY, AND LICENSEE'S SOLE REMEDY, IS SET FORTH ABOVE.
//  LATTICE DOES NOT WARRANT OR REPRESENT THAT THIS FILE, ITS CONTENTS OR
//  USE THEREOF DOES NOT INFRINGE ON THIRD PARTIES' INTELLECTUAL PROPERTY
//  RIGHTS, INCLUDING ANY PATENT. IT IS THE USER'S RESPONSIBILITY TO VERIFY
//  THE USER SOFTWARE DESIGN FOR CONSISTENCY AND FUNCTIONALITY THROUGH THE
//  USE OF FORMAL SOFTWARE VALIDATION METHODS.
// ------------------------------------------------------------------

#ifndef _DEVICE_INFO_H
#define _DEVICE_INFO_H
#include "platform_init.h"

#define _TO_STR(x) #x
#define TO_STR(x) _TO_STR(x)
#define PRINT_MACRO(x) #x " = " _TO_STR(x)"\n"
#define PRINT_LINE "=====================================================================\n"

#ifdef RISCV_RTOS_INST_0
#define CPU_INFO TO_STR(CPU_INST_0_NAME)", type: RISC-V RTOS"

#if CPU_INST_0_PLIC_EN
#define PLIC_INFO "PLIC enabled, Base Address: "TO_STR(CPU_INST_0_CLINT_BASE_ADDR)
#else
#define PLIC_INFO "PLIC disabled"
#endif

#if CPU_INST_0_CLINT_EN
#define CLINT_INFO "CLINT enabled, Base Address: "TO_STR(CPU_INST_0_CLINT_BASE_ADDR)
#else
#define CLINT_INFO "CLINT disabled"
#endif

#define CORE_INFO               \
	"Processor: "CPU_INFO"\n"   \
	"    "PLIC_INFO"\n"         \
	"    "CLINT_INFO

#elif defined RISCV_MC_INST_0
#define CPU_INFO TO_STR(CPU_INST_0_NAME)", type: RISC-V MC"

#if CPU_INST_0_PIC_ENABLE
#define PIC_INFO "PIC enabled, Base Address: "TO_STR(CPU_INST_0_PICTIMER_START_ADDR)
#else
#define PIC_INFO "PIC disabled"
#endif

#if CPU_INST_0_TIMER_ENABLE
#define MTIMER_INFO "MTIMER enabled, Base Address: "TO_STR(CPU_INST_0_PICTIMER_START_ADDR)
#else
#define MTIMER_INFO "MTIMER disabled"
#endif

#define CORE_INFO               \
	"Processor: "CPU_INFO"\n"   \
	"    "PIC_INFO"\n"          \
	"    "MTIMER_INFO

#elif defined RISCV_SM_INST_0
#define CPU_INFO TO_STR(CPU_INST_0_NAME)", type: RISC-V SM"

#if CPU_INST_0_PIC_ENABLE
#define PIC_INFO "PIC enabled, Base Address: "TO_STR(CPU_INST_0_PICTIMER_START_ADDR)
#else
#define PIC_INFO "PIC disabled"
#endif

#if CPU_INST_0_TIMER_ENABLE
#define MTIMER_INFO "MTIMER enabled, Base Address: "TO_STR(CPU_INST_0_PICTIMER_START_ADDR)
#else
#define MTIMER_INFO "MTIMER disabled"
#endif

#define CORE_INFO               \
	"Processor: "CPU_INFO"\n"   \
	"    "PIC_INFO"\n"          \
	"    "MTIMER_INFO

#elif defined RISCV_NANO_INST_0
#define CPU_INFO TO_STR(CPU_INST_0_NAME)", type: RISC-V NANO"

#define CORE_INFO               \
	"Processor: "CPU_INFO
#else
#define CPU_INFO "Can't find matched processor!"

#define CORE_INFO               \
	"Processor: "CPU_INFO
#endif

#ifdef LED_GPIO_INST_BASE_ADDR
#define LED_INFO TO_STR(LED_GPIO_INST_NAME)", base address: "TO_STR(LED_GPIO_INST_BASE_ADDR)
#else
#define LED_INFO "No such device, LED display disabled!"
#endif

#ifdef TERM_UART_INST_BASE_ADDR
#define TERM_INFO TO_STR(TERM_UART_INST_NAME)", base address: "TO_STR(TERM_UART_INST_BASE_ADDR)
#elif defined TERM_LOCAL_UART_INST_BASE_ADDR
#define TERM_INFO "Processor UART, base address:"TO_STR(TERM_LOCAL_UART_INST_BASE_ADDR)
#else
#define TERM_INFO "No such device, terminal disabled!"
#endif

#define DEVICE_INFO                \
    "\n"PRINT_LINE                 \
    CORE_INFO"\n"                  \
    "LED: "LED_INFO"\n"            \
    "Terminal: "TERM_INFO"\n"      \
    PRINT_LINE

#pragma message (DEVICE_INFO)

#endif
